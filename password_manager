# password_manager.py

from cryptography.fernet import Fernet

def generate_key():
    key = Fernet.generate_key()
    with open("key.key", "wb") as key_file:
        key_file.write(key)

def encrypt_password(password):
    with open("key.key", "rb") as key_file:
        key = key_file.read()
    f = Fernet(key)
    return f.encrypt(password.encode())

def decrypt_password(encrypted_password):
    with open("key.key", "rb") as key_file:
        key = key_file.read()
    f = Fernet(key)
    return f.decrypt(encrypted_password).decode()

# Sample usage
generate_key()
encrypted = encrypt_password("my_secure_password")
print(decrypt_password(encrypted))
